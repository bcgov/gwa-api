openapi: 3.0.0
info:
  version: 1.0.0
  title: Gateway Administration (GWA) API
  license:
    name: Apache 2.0
  description: |-
    # Introduction
    This set of APIs are responsible for:
      * validating Kong Declarative Config and applying it to Kong
      * managing namespaces to segment services
      * managing membership to namespaces for access control
servers:
  - url: {{server_url}}
tags:
  - name: Status
    description: API status

paths:
  # /namespaces (GET, POST)
  # /namespaces/{namespace} (GET, PUT, DELETE)
  # /namespaces/{namespace}/gateway (PUT)
  # /namespaces/{namespace}/members (PUT)
  # /namespaces/{namespace}/catalog/{api} (GET, PUT)

  /namespaces/{namespace}/services:
    get:
      summary: Get status of services
      description: Ping the upstream service and get status of services
      tags:
        - Service Status
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /namespaces/{namespace}/serviceaccounts:
    get:
      summary: Get service accounts
      description: Get service accounts
      tags:
        - Service Accounts
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

    post:
      summary: Add a new service account
      description: Add a new service account
      tags:
        - Service Accounts
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /namespaces/{namespace}/serviceaccounts/{accountId}:
    put:
      summary: Update service account credentials
      description: Update service account credentials
      tags:
        - Service Accounts
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'
    delete:
      summary: Delete service account
      description: Delete service account
      tags:
        - Service Accounts
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /namespaces/{namespace}:
    delete:
      summary: Delete a namespace
      description: Delete a namespace
      tags:
        - Namespaces
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /namespaces:
    post:
      summary: Add a new namespace
      description: Add a new namespace
      tags:
        - Namespaces
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string

      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /namespaces/{namespace}/membership:
    put:
      summary: Update full membership
      description: Update the full membership
      tags:
        - ACL
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  username:
                    type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /namespaces/{namespace}/gateway:
    put:
      summary: Updates the gateway config
      description: Returns the changes that were performed
      tags:
        - Gateway
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                dryRun:
                  type: boolean
                configFile:
                  type: string
                  format: binary          

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /status:
    get:
      operationId: v1.v1.get_status
      summary: Return overall API status
      description: Returns the overall API status
      tags:
        - Status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /whoami:
    get:
      summary: Return key information about authenticated identity
      description: Authenticated identity details
      tags:
        - Who Am I
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '500':
          $ref: '#/components/responses/500InternalServerError'

components:
  responses:
    401Unauthorized:
      description: Unauthorized
    404NotFound:
      description: Not Found
    400BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    500InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
  schemas:
    errorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Something exploded
        code:
          type: integer
          format: int32
          minimum: 0
          description: Error code
          example: 42
    status:
      type: object
      properties:
        message:
          type: string
          description: Human friendly response
          example: Record updated
        results:
          type: string
          description: Results from Change
    profile:
      type: object
      properties:
        namespace:
          type: string
          description: Namespace the identity has permission to access

  securitySchemes:
    oauth2:
      type: oauth2       
      x-tokenInfoUrl: "{{tokeninfo_url}}"
      flows:
        clientCredentials:
          tokenUrl: "{{accesstoken_url}}"
          scopes: []
    # authorizationCode:
    #   type: oauth2       
    #   x-tokenInfoUrl: "{{tokeninfo_url}}"
    #   flows:
    #     authorizationCode:
    #       authorizationUrl: "{{authorization_url}}"
    #       scopes: {}
    # password:
    #   type: oauth2       
    #   x-tokenInfoUrl: "{{tokeninfo_url}}"
    #   flows:
    #     password:
    #       tokenUrl: "{{token_url}}"
    #       scopes: {}
security:
  - oauth2: []
#  - authorizationCode: []
 